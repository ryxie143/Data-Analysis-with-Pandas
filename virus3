Fake Error Messages Prank 

## **Step 1: Install Required Library**
```cmd
pip install pywin32
```

## **Step 2: Create the Script (`fake_error.py`)**
```python
import random
import time
import win32gui
import win32con
import winsound
import ctypes
import sys
from threading import Thread

# ===== CONFIG =====
MAX_SPEED = True          # Set to False for less aggressive spamming
ERROR_SOUND = True       # Play warning sounds
HIDE_CONSOLE = True      # Run completely in background
# ==================

ERROR_MESSAGES = [
    "CRITICAL SYSTEM FAILURE: Keyboard not found. Press F1 to continue.",
    "VIRUS ALERT: Trojan.Horse detected in system32!",
    "BSOD IMMINENT: 0x0000007B CRITICAL_PROCESS_DIED",
    "ERROR: All your RAM has been converted to Bitcoin",
    "WARNING: Your CPU is overheating (98Â°C detected)",
    "ALERT: Hackers from North Korea detected!",
    "SYSTEM32 DELETION IN PROGRESS: 37% complete",
    "CRITICAL: Your warranty expired 5 minutes ago",
    "ERROR: Windows.Update.Service has mutated",
    "WARNING: Your GPU is mining cryptocurrency",
    "ALERT: BIOS corruption detected (Sector 0xBADF00D)",
    "FATAL ERROR: Too many Chrome tabs open",
]

def beep_error():
    """Plays different error sounds randomly"""
    sounds = [
        winsound.MB_ICONHAND,    # Critical stop
        winsound.MB_ICONQUESTION, # Question
        winsound.MB_ICONEXCLAMATION # Exclamation
    ]
    winsound.MessageBeep(random.choice(sounds))

def show_error():
    """Shows a fake error message"""
    title = random.choice([
        "Microsoft Windows",
        "System Alert",
        "CRITICAL ERROR",
        "Virus Protection",
        "IT Department"
    ])
    
    style = random.choice([
        win32con.MB_ICONERROR | win32con.MB_SYSTEMMODAL,
        win32con.MB_ICONWARNING | win32con.MB_SYSTEMMODAL,
        win32con.MB_ICONINFORMATION | win32con.MB_SYSTEMMODAL
    ])
    
    if ERROR_SOUND:
        Thread(target=beep_error).start()
    
    win32gui.MessageBox(
        0,
        random.choice(ERROR_MESSAGES),
        title,
        style
    )

def hide_console():
    """Completely hides the console window"""
    ctypes.windll.user32.ShowWindow(
        ctypes.windll.kernel32.GetConsoleWindow(),
        0
    )

def main():
    if HIDE_CONSOLE:
        hide_console()
    
    # Calculate delay based on intensity
    delay = 0.1 if MAX_SPEED else random.uniform(0.5, 1.5)
    
    # Main spamming loop
    while True:
        try:
            # Spawn multiple error threads for maximum chaos
            for _ in range(random.randint(1, 3 if MAX_SPEED else 1)):
                Thread(target=show_error).start()
            
            time.sleep(delay)
        except:
            pass

if __name__ == "__main__":
    # Make sure only one instance runs
    try:
        mutex = ctypes.windll.kernel32.CreateMutexW(None, False, "FakeErrorMutex")
        if ctypes.windll.kernel32.GetLastError() == 183:
            sys.exit()
        
        main()
    finally:
        if 'mutex' in locals():
            ctypes.windll.kernel32.CloseHandle(mutex)
```



## **Step 4: Run the Prank**
```cmd
python fake_error.py
```

