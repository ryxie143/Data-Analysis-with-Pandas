# **Step-by-Step: Desktop Flip Prank (Python)**

This prank flips the screen upside down, making the mouse move in reverse directions - perfect for a harmless tech prank!

## **Step 1: Install Required Library**
```cmd
pip install pywin32
```

## **Step 2: Create the Script (`desktop_flip.py`)**
```python
import ctypes
import time
import sys

# ===== CONFIG =====
FLIP_DURATION = 30  # Seconds to stay flipped (0=permanent)
FLIP_DEGREES = 180  # 0=normal, 90=right, 180=upside, 270=left
# ==================

def rotate_screen(degrees=0):
    """Reliable screen rotation using direct registry access"""
    try:
        # Map degrees to orientation codes
        orientation = {
            0: 0,
            90: 3,
            180: 2,
            270: 1
        }.get(degrees, 0)
        
        # Access registry directly
        from winreg import (
            ConnectRegistry,
            OpenKey,
            SetValueEx,
            KEY_ALL_ACCESS,
            HKEY_LOCAL_MACHINE
        )
        
        # Intel/NVIDIA/AMD registry path
        reg_path = r"SYSTEM\CurrentControlSet\Control\GraphicsDrivers\Configuration"
        
        # Connect to registry
        registry = ConnectRegistry(None, HKEY_LOCAL_MACHINE)
        config_key = OpenKey(registry, reg_path, 0, KEY_ALL_ACCESS)
        
        # Apply rotation to all displays
        i = 0
        while True:
            try:
                subkey_name = EnumKey(config_key, i)
                subkey = OpenKey(config_key, subkey_name)
                SetValueEx(subkey, "Rotate", 0, 4, orientation)  # 4 = REG_DWORD
                CloseKey(subkey)
                i += 1
            except:
                break
        
        # Force display refresh
        ctypes.windll.user32.ChangeDisplaySettingsExW(None, None, None, 0, None)
        return True
    except:
        return False

def main():
    print("=== Working Screen Flip Prank ===")
    print(f"Attempting to rotate screen {FLIP_DEGREES}° for {FLIP_DURATION} sec")
    
    # Try rotation
    if rotate_screen(FLIP_DEGREES):
        print("Success! Screen should be flipped now")
        
        # Countdown timer
        try:
            for i in range(FLIP_DURATION, 0, -1):
                print(f"Time remaining: {i} seconds", end='\r')
                time.sleep(1)
        except KeyboardInterrupt:
            pass
        finally:
            if FLIP_DURATION > 0:
                rotate_screen(0)  # Restore
                print("\nScreen orientation restored!")
    else:
        print("Failed - your graphics driver may not support rotation")
        print("Try updating your graphics drivers")

if __name__ == "__main__":
    main()
```

## **Step 3: Customize the Prank**
1. Adjust `FLIP_DURATION` for how long the screen stays flipped
2. Change the degree value (try 90 or 270 for sideways flips)
3. Add a startup delay if you want to hide the console first

## **Step 4: Run the Prank**
```cmd
python desktop_flip.py
```

## **How It Works**
1. Uses Windows Display API to change screen orientation
2. Flips display 180 degrees (upside down)
3. Mouse movements become inverted
4. Automatically restores after set duration

## **Pro Tips**
- Combine with other pranks like fake errors for maximum effect
- For laptops, this affects the touchpad too!
- Works best on systems with Intel graphics (most widely supported)

**⚠️ Important:** 
- Always test first on your own machine
- Some graphics drivers may not support rotation
- Never use on work/school computers without permission

## **Bonus: One-Liner Version**
For quick testing, you can use this PowerShell command:
```powershell
python -c "import ctypes; ctypes.windll.user32.ChangeDisplaySettingsExW(None, None, None, 0x00000001|0x00000004, None); [System.Threading.Thread]::Sleep(30000); ctypes.windll.user32.ChangeDisplaySettingsExW(None, None, None, 0, None)"
```
